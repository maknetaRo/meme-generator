{"version":3,"sources":["components/modules/ListStyle.js","components/Navbar.js","components/modules/StyledImg.js","components/Meme.js","components/modules/StyledMain.js","components/modules/StyledTitle.js","components/modules/StyledContainer.js","components/modules/StyledForm.js","components/Memes.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["StyledListElem","styled","li","StyledList","ul","StyledNavbar","nav","Navbar","StyledImage","img","ImageBox","div","Meme","props","url","name","onClick","src","alt","StyledMain","main","StyledTitle","h2","StyledContainer","section","Form","form","StyledInput","input","SubmitButton","button","Memes","useState","templates","setTemplates","template","setTemplate","textTop","setTextTop","textBottom","setTextBottom","meme","setMeme","getTemplates","a","fetch","response","json","data","memes","useEffect","formHandle","e","preventDefault","params","template_id","id","text0","text1","username","password","obj","Object","entries","map","key","value","join","console","log","memeUrl","Fragment","onSubmit","placeholder","onChange","target","required","StyledFooter","footer","StyledLink","Footer","href","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.530152fe.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const StyledListElem = styled.li`\n    padding: 0.25rem 1rem;\n    text-decoration: none;\n    color: #F4E8C1;\n`\n\nexport const StyledList = styled.ul`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    list-style: none; \n    width: 100%;   \n`;\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { StyledList, StyledListElem } from './modules/ListStyle';\n\nconst StyledNavbar = styled.nav`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    height: 70px;\n    line-height: 70px;\n    background-color: #351F39;   \n`;\n\n\n\nconst Navbar = () => {\n    return (\n        <StyledNavbar>\n            <StyledList>\n                <StyledListElem>Meme Generator</StyledListElem>\n            </StyledList>\n\n        </StyledNavbar>\n    )\n}\n\nexport default Navbar;\n","import styled from 'styled-components'\n\nexport const StyledImage = styled.img`\n    width: 100%;\n    height: auto;   \n    border-radius: 5px;\n    border: 3px solid #709FB0;\n    &:hover {\n        opacity: 0.9;\n    }\n`\n\nexport const ImageBox = styled.div`\n    width: 300px;\n    margin: 2rem;\n`","import React from 'react'\nimport { ImageBox, StyledImage } from './modules/StyledImg'\n\n\n\nconst Meme = (props) => {\n    const { url, name, onClick } = props\n    return (\n        <ImageBox>\n            <StyledImage src={url} alt={name} onClick={onClick} />\n        </ImageBox>\n    )\n}\n\nexport default Meme\n","import styled from 'styled-components'\n\nexport const StyledMain = styled.main`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n    padding: 2%;\n    min-height: calc(100vh - 180px);\n`\n","import styled from 'styled-components'\n\nexport const StyledTitle = styled.h2`\n    text-align: center;\n    color: #726A95;\n`\n","import styled from 'styled-components'\n\nexport const StyledContainer = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 auto;\n    justify-content: center;\n    align-items: center;\n\n`\n","import styled from 'styled-components'\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    \n`\n\nexport const StyledInput = styled.input`\n    padding: 0.25rem 1rem;\n    border: 0;\n    border-bottom: 3px solid #726A95;\n    font-size: 1.5rem;\n    margin: 1rem auto;\n    outline: transparent;\n    background-color: transparent;\n    &:hover {\n        transform: scale(1.1);\n    }\n`\n\nexport const SubmitButton = styled.button`\n    padding: 0.75rem 1rem;\n    border-radius: 5px;\n    outline: transparent;\n    font-size: 1.5rem;\n    background-color: #726A95;\n    color:  #351F39;\n    margin: 1rem 0;\n    border: 0;\n    cursor: pointer;\n    color: #F4E8C1;\n    &:hover {\n        transform: scale(1.1);\n    }\n`\n","import React, { useState, useEffect } from 'react'\nimport Meme from './Meme'\nimport { StyledMain } from './modules/StyledMain'\nimport { StyledTitle } from './modules/StyledTitle'\nimport { StyledContainer } from './modules/StyledContainer'\nimport { Form, StyledInput, SubmitButton } from './modules/StyledForm'\nimport { ImageBox, StyledImage } from './modules/StyledImg'\n\nconst objectToQueryParam = (obj) => {\n    const params = Object.entries(obj).map(([key, value]) => `${key}=${value}`);\n    return '?' + params.join(\"&\")\n}\n\nconst Memes = () => {\n    const [templates, setTemplates] = useState([])\n    const [template, setTemplate] = useState(null)\n    const [textTop, setTextTop] = useState(\"\")\n    const [textBottom, setTextBottom] = useState(\"\")\n    const [meme, setMeme] = useState(null)\n\n    const getTemplates = async () => {\n        const response = await fetch('https://api.imgflip.com/get_memes');\n        const data = await response.json()\n        const templates = await data.data.memes;\n        setTemplates(templates)\n    }\n\n    useEffect(() => {\n        getTemplates()\n    }, [])\n\n    const formHandle = async (e) => {\n        e.preventDefault()\n        const params = {\n            template_id: template.id,\n            text0: textTop,\n            text1: textBottom,\n            username: \"makneta\",\n            password: \"reactApp\"\n        };\n        const response = await fetch(\n            `https://api.imgflip.com/caption_image${objectToQueryParam(params)}`\n        )\n\n        const json = await response.json()\n        console.log(json)\n        const memeUrl = json.data.url;\n        console.log(memeUrl)\n        setMeme(memeUrl)\n    }\n\n\n    if (meme) {\n        return (\n            <StyledMain>\n                <ImageBox>\n                    <StyledImage src={meme} />\n                </ImageBox>\n            </StyledMain>\n\n        )\n    }\n\n    return (\n        <StyledMain>\n            {template && (\n                <React.Fragment>\n                    <Form onSubmit={formHandle}>\n                        <Meme key={template.id} {...template} />\n\n                        <StyledInput\n                            placeholder=\"top text\"\n                            value={textTop}\n                            onChange={(e) => setTextTop(e.target.value)}\n                            required\n                        />\n                        <StyledInput\n                            placeholder=\"bottom text\"\n                            value={textBottom}\n                            onChange={(e) => setTextBottom(e.target.value)}\n                            required\n                        />\n                        <SubmitButton>Create a Meme</SubmitButton>\n                    </Form>\n                </React.Fragment>\n            )}\n            {!template && (\n                <React.Fragment>\n                    <StyledTitle>Pick a template</StyledTitle>\n                    <StyledContainer>\n                        {templates.map((template) => {\n                            return (\n                                <Meme key={template.id} {...template} onClick={() => {\n                                    setTemplate(template)\n                                }}\n                                />\n                            )\n                        })}\n\n                    </StyledContainer>\n                </React.Fragment>\n            )}\n        </StyledMain>\n\n\n    )\n}\n\nexport default Memes;\n\n\n\n","import React from 'react';\nimport styled from 'styled-components'\nimport { StyledList, StyledListElem } from './modules/ListStyle';\n\nconst StyledFooter = styled.footer`\n display: flex;\n align-items: center;\n justify-content: space-between;\n width: 100%;\n height: 80px;\n background-color: #351F39;  \n`;\n\nconst StyledLink = styled.a`\n    color: #A0C1B8;\n`\n\nconst Footer = () => {\n    return (\n        <StyledFooter>\n            <StyledList>\n                <StyledListElem>Made with <span>&hearts;</span> by <StyledLink href=\"https://github.com/maknetaRo\" target=\"_blank\">Magdalena Rosłaniec</StyledLink> </StyledListElem>\n                <StyledListElem>using <StyledLink href=\"https://reactjs.org/docs/getting-started.html\" target=\"_blank\">React</StyledLink></StyledListElem>\n                <StyledListElem>and <StyledLink href=\"https://imgflip.com/api\" target=\"_blank\">imgflip API</StyledLink></StyledListElem>\n            </StyledList>\n        </StyledFooter>\n    )\n}\n\nexport default Footer;","import Navbar from './components/Navbar'\nimport Memes from './components/Memes'\nimport Footer from './components/Footer'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Memes />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}